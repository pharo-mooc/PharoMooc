1
00:00:03,080 --> 00:00:03,840
-こんにちは、みなさん。

2
00:00:04,160 --> 00:00:06,960
このビデオでは
構文ハイライトについて

3
00:00:07,280 --> 00:00:10,240
書いているコードについての
システムからの直接的なフィードバックが

4
00:00:10,560 --> 00:00:11,760
いかに助けになるかを見ていきましょう。

5
00:00:12,080 --> 00:00:16,280
例えば
大文字の C で書き始めると

6
00:00:16,680 --> 00:00:18,720
斜体になっているのが見えますね。

7
00:00:19,040 --> 00:00:22,280
これはつまり、大文字の C が
既存のクラス名の初めの部分であると

8
00:00:22,600 --> 00:00:25,560
システムが認識したことを示しています。

9
00:00:26,200 --> 00:00:29,320
「Color」と書くと

10
00:00:30,080 --> 00:00:33,520
この単語は斜体ではなくなります。

11
00:00:33,840 --> 00:00:35,520
既存のクラスであることが

12
00:00:36,600 --> 00:00:38,240
認識されました。

13
00:00:40,320 --> 00:00:43,200
では「Colox」ではどうなるでしょう？

14
00:00:43,520 --> 00:00:48,400
すると赤くなります。
これはシステムに認識されなかったということで

15
00:00:48,840 --> 00:00:51,440
正しいパッケージをロードしていないか
あるいは

16
00:00:52,080 --> 00:00:55,680
単純に構文的に間違っているかです。

17
00:00:56,000 --> 00:00:57,520
この場合は、構文誤りです。

18
00:00:57,840 --> 00:01:00,320
「Color」に戻して

19
00:01:00,640 --> 00:01:03,560
メソッド名を書き始めてみます。

20
00:01:04,240 --> 00:01:07,120
例えば「ne」

21
00:01:08,640 --> 00:01:09,760
斜体です。

22
00:01:10,080 --> 00:01:13,040
つまりクラス名の時と同じように

23
00:01:13,360 --> 00:01:16,960
始めの部分としてシステムに認識されています。

24
00:01:17,600 --> 00:01:21,320
しかし、例えば「nexx」と書くと

25
00:01:22,080 --> 00:01:24,880
赤くなります。
システムに認識されていません。

26
00:01:26,440 --> 00:01:28,440
しかし「new」と書くと

27
00:01:29,640 --> 00:01:31,760
斜体ではなくなり

28
00:01:32,400 --> 00:01:36,520
つまりこのメソッドは
このクラスに従って

29
00:01:37,440 --> 00:01:38,680
システムに認識されます。

30
00:01:39,000 --> 00:01:40,600
「Color new」は

31
00:01:41,440 --> 00:01:44,920
もしかしたら動くかもしれない
あるいは少なくともシステムに認識されてはいます。

32
00:01:45,960 --> 00:01:47,400
以上のようにして

33
00:01:47,720 --> 00:01:50,520
構文的な方法で

34
00:01:50,840 --> 00:01:52,360
即時的なフィードバックを得ることができます。

35
00:01:52,760 --> 00:01:56,120
これでコードが必ず動くことが
保証されるわけではありませんが

36
00:01:56,960 --> 00:01:59,520
システムに認識されてはいる
ということを意味しています。

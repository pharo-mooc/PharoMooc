1
00:00:03,560 --> 00:00:05,640
-やり直しの第5回です。

2
00:00:05,960 --> 00:00:08,720
オブジェクトを正しく初期化する方法を
見ていきましょう。

3
00:00:09,040 --> 00:00:10,800
前回までにやってきたのは

4
00:00:11,120 --> 00:00:13,840
「new」を呼んでインスタンスを生成して

5
00:00:14,320 --> 00:00:20,280
それぞれのインスタンス変数に
値を設定してきました。

6
00:00:20,920 --> 00:00:22,080
では、今ここで
単に「c increment」としたら

7
00:00:22,400 --> 00:00:24,320
どうなるか見てみましょう

8
00:00:25,800 --> 00:00:28,200
やってみましょう。Cmd+P。

9
00:00:28,840 --> 00:00:31,080
オーケー、「+ was sent to nil」
(+ が nil に送られました)

10
00:00:31,400 --> 00:00:33,120
どういうことかというと、
「count」はデフォルトつまり

11
00:00:33,440 --> 00:00:35,560
初期化されておらず

12
00:00:35,880 --> 00:00:39,080
値が「nil」になっています。
Pharo がそうしています。

13
00:00:39,880 --> 00:00:42,440
これはデフォルト値としては
あまり便利ではありません。

14
00:00:42,760 --> 00:00:45,280
「0」にできたらどうでしょう。

15
00:00:45,720 --> 00:00:48,040
この状況をカバーするような
テストを書いてみましょう。

16
00:00:48,360 --> 00:00:49,800
ここは要らなくて...

17
00:00:50,120 --> 00:00:53,440
まず名前を変えましょう。
「testInitialize」です。

18
00:00:54,560 --> 00:00:56,520
この2行は要りません。

19
00:00:57,320 --> 00:00:58,720
生成してすぐに

20
00:00:59,040 --> 00:01:02,320
「count」インスタンス変数が
0に等しくなって欲しいわけです。

21
00:01:03,040 --> 00:01:04,960
保存しましょう。オーケー。

22
00:01:05,640 --> 00:01:07,280
初期化できているとして

23
00:01:07,720 --> 00:01:09,160
テストを走らせてみましょう。

24
00:01:09,480 --> 00:01:11,800
失敗しました。何も変えてませんから

25
00:01:12,120 --> 00:01:13,880
デフォルト値は「nil」のままです。

26
00:01:15,120 --> 00:01:18,560
変更するためには
「initialize」メソッドを定義する必要があります。

27
00:01:19,480 --> 00:01:22,520
このメソッドは
オブジェクトが生成される時に呼ばれます。

28
00:01:22,840 --> 00:01:28,360
スーパークラスの初期化メソッドを呼ぶ
良い練習になります。

29
00:01:28,680 --> 00:01:31,200
それから必要な振る舞いを実装します。

30
00:01:31,520 --> 00:01:33,560
つまり「count」を0にします。

31
00:01:35,200 --> 00:01:36,880
オーケー。これを保存します。

32
00:01:37,200 --> 00:01:40,200
テストメソッドが検出されました。
走らせてみましょう。

33
00:01:41,200 --> 00:01:42,520
動いています。すごいですね。

34
00:01:42,840 --> 00:01:47,640
インスタンス変数 count を 0 にする
デフォルトの振る舞いができました。

35
00:01:48,040 --> 00:01:53,040
では、生成時に値を5にしたいとします。

36
00:01:53,920 --> 00:01:56,240
「initialize」メソッドを
変更することもできますが

37
00:01:56,640 --> 00:01:59,480
これをデフォルトとして
取っておきたいです。

38
00:02:00,200 --> 00:02:04,760
これを扱うメソッドを書いてみます。

39
00:02:05,080 --> 00:02:06,360
テストを書きましょう。

40
00:02:07,080 --> 00:02:10,720
「testStartingAt5」を書きます。

41
00:02:13,200 --> 00:02:17,960
「new」の代わりに
「startingAt: 5」とします。

42
00:02:18,560 --> 00:02:21,760
count が 5 になることを表明します。

43
00:02:22,600 --> 00:02:23,760
オーケー、これを保存しましょう。

44
00:02:24,080 --> 00:02:27,520
メソッドが検出されませんでしたが
これは正常です。走らせてみましょう。

45
00:02:28,320 --> 00:02:32,120
オーケー、「Instance of Counter class
did not understand #startingAt:」

46
00:02:32,560 --> 00:02:35,960
クラスメソッド「startingAt:」を
Counter に定義する必要があります。

47
00:02:37,160 --> 00:02:40,840
クラスメソッドを実装するには
そのクラスへ行きます。

48
00:02:41,240 --> 00:02:44,160
今は「Inst. side」になっていますが

49
00:02:44,480 --> 00:02:45,640
「Class side」にしましょう。

50
00:02:46,760 --> 00:02:50,920
そして「startingAt: anInteger」を実装します。

51
00:02:52,040 --> 00:02:57,800
オーケー、では書きます。
「self new count: anInteger」

52
00:02:58,440 --> 00:03:00,840
これは、新しいカウンターが生成されて

53
00:03:01,160 --> 00:03:05,000
インスタンス変数の値が
与えられた整数になる、ということです。

54
00:03:05,760 --> 00:03:09,080
これを保存して
テストを走らせると

55
00:03:09,720 --> 00:03:11,600
全てグリーンです。クールですね。

56
00:03:11,920 --> 00:03:16,880
ほとんど全ての機能を扱う
最終版のテストを書きましょう。

57
00:03:17,520 --> 00:03:21,680
startingAt5Increment としましょう。

58
00:03:23,320 --> 00:03:25,040
5 で始まって

59
00:03:25,360 --> 00:03:29,720
ここにインクリメントを追加します。

60
00:03:30,520 --> 00:03:33,200
それからインクリメントされたカウンタの
「count」を呼びます。

61
00:03:33,520 --> 00:03:37,320
これは 5 をインクリメントしたので
6 になります。

62
00:03:38,920 --> 00:03:39,840
では見てみましょう。

63
00:03:40,240 --> 00:03:41,960
全てのテストを走らせると

64
00:03:42,800 --> 00:03:45,200
6つが走って、6つとも合格しました。

65
00:03:45,520 --> 00:03:48,160
変更分をコミットする絶好のタイミングです。

66
00:03:48,480 --> 00:03:51,640
Iceberg の Working copy へ行って

67
00:03:51,960 --> 00:03:52,960
Commit を押します。

68
00:03:53,600 --> 00:03:54,400
そして書きます。

69
00:03:55,400 --> 00:04:01,120
「Initialization methods (tested)」
(初期化メソッド (テスト済))

70
00:04:02,280 --> 00:04:03,320
コミットしましょう。

71
00:04:04,080 --> 00:04:07,160
デフォルトの振りまいとして
オブジェクトを正しく初期化する方法を

72
00:04:07,480 --> 00:04:08,920
学びました。

73
00:04:09,240 --> 00:04:12,880
そして、様々なインスタンスを得るための

74
00:04:13,200 --> 00:04:15,640
クラスメソッドの書き方を学びました
